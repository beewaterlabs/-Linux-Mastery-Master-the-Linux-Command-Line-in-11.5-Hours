# xargs command
# The xargs command allows you to convert piped data into command line arguments, for commands that only accept command line arguments.

# echo doesn't accept standard input. It only accepts command line arguments.

# Here you can see that when you pipe date to the echo command, it only processes the echo text:

adminuser@ubuntu:~$ date | echo "hello"
hello

# The xargs command will convert the data from standard input and it will put it instead into command line arguments, allowing the echo command to use the xargs converted command line argument:

adminuser@ubuntu:~$ date | xargs echo
Thu Jan 16 02:38:58 AM UTC 2025

# You can now add text to echo ---> "This is the file timestamp:"

adminuser@ubuntu:~$ date | xargs echo "This is the file timestamp:"
This is the file timestamp: Thu Jan 16 02:46:47 AM UTC 2025

# xargs will process 1st.
# So basically xargs is like a little plaster fix for when a command does not accept standard input, but only accepts command and arguments, you can use xargs to get around the problem.

# Summary:

# Piping is a process that connects the standard output of one command to the standard input of another.

# STDOUT = standard output
# STDIN  = standard input
# STDERR = standard error

# Redirection of standard output breaks pipelines.

# If you want to save a data snapshot without breaking your pipeline, use the T command.

# If a command does not accept standard input, as long as the command accepts command line arguments, you can use the xargs command instead.







